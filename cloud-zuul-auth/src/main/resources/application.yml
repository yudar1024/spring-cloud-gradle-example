spring:
  application:
    name: zuul-auth
server:
  port: 11100
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8080/eureka/,http://localhost:8081/eureka/
    registry-fetch-interval-seconds: 3
    eureka-server-connect-timeout-seconds: 10
    eureka-server-read-timeout-seconds: 10


#    信道维持时间
ribbon:
  ConnectTimeout: 600000
  ReadTimeout: 600000
  eureka:
    enabled: true

#单个访问请求持续时间
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000

zuul:
  routes:
#配置方式有3种
#第一种 serviceid: mappingurl，serviceid为其他服务的spring.application.name,mappingurl 为想要映射的URL 推荐使用这种。
    cloud-service-1: /service1/**
    cloud-service-2: /service2/**
    auth-server: /authserver/**
#第二种 label:{path，serviceId},serviceId为其他服务的spring.application.name,path 为想要映射的URL, label 为任意的标记字符
#    service1:
#      path: /service1/**
#      serviceId: cloud-service-1
#    service2:
#      path: /service2/**
#      serviceId: cloud-service-2

#第三种 label:{path，url},url为其他服务的url,path 为想要映射的URL, label 为任意的标记字符。
#这类配置方式有限制，不会使用eureak的ribbon LB功能。需要配置zuul 自身去做LB，所以不推荐
#    service1:
#      path: /service1/**
#      url: http://localhost:9101
#    service2:
#      path: /service2/**
#      url: http://localhost:9102
#第三种方式结合zuul 自身配置LB 的部分 开始 配置service1 的LB
#    service1:
#      path: /service1/**
#此处将serviceId 设置为label
#      serviceId: service1
#    service2:
#      path: /service2/**
#      url: http://localhost:9102
#禁用ribbon
#ribbon:
#  eureka:
#    enabled: false
#对每个服务配置LB
#service1:
#  ribbon:
#    listOfServers: http://localhost:9101,http://localhost:9103

#zuul 自身配置LB 的部分 结束

endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true
  health:
    sensitive: false

logging:
  level:
    ROOT: DEBUG
    org.springframework.web: DEBUG

debug: true

#proxy:
#  auth:
#    routes:
#      cloud-service-1: oauth2
#security:
#  oauth2:
#    client:
#      client-id:
#      client-secret:

